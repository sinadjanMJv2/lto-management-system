<div class="card_con">

<div class="card" style="width: 18rem;">
  <img src="~/image/pending-text.webp" class="card-img-top" alt="...">
  <div class="card-body">
    <h5 class="card-title">Pending License Upgrade</h5>
    <p class="card-text"> Total Pending License Upgrade</p>
      <figure><img src="./../image/team.png" alt=""> <h1 class="pending">500</h1></figure>

  </div>
</div>

<div class="card" style="width: 18rem;">
  <img src="~/image/approved.png" class="card-img-top" alt="...">
  <div class="card-body">
    <h5 class="card-title">Approved License Upgrade</h5>
    <p class="card-text"> Total Approved License Upgrade</p>
      <figure><img src="./../image/team.png" alt=""> <h1 class="approved">500</h1></figure>
   
 
  </div>
</div>

</div>


<br>
<br>
<br>


 @Html.Partial("bookTable")
 @Html.Partial("bookInfo")



<style>
    .card_con{display: flex; flex-wrap: wrap; justify-content: flex-start; gap: 30px; flex-direction: row;}
       
    .card-img-top{ height:250px;border: 1px solid #e2d8d8;}
  body {background-color: #f2f2f2;margin: 0;padding: 0;display: flex;justify-content: center;align-items: center;height: 100vh;}
        

</style>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script src="~/lib/jquery/dist/jquery.js"></script>

<script src="~/lib/emailjs/dist/email.min.js"></script>



<script>
  var selectedBook;
    var selectedBookId;
   var BookList = {};
   var BookingList = {};
 var BookPermitBookings = {};
  let counter = 1;
 
  $(() => {
getBooking();
displaySPData();
 
 function getBooking() {
            $.ajax("../api/adminapi/getBookings")
                .done(function (result) {
                    BookingList = result;

                });
        }



 function displaySPData() {
  $.ajax({
    url: '../api/adminapi/getBookings',
    method: 'GET',
    success: function(result) {
      // Filter the data where transactionName is "License Upgrade"
     BookPermitBookings = result.filter(item => item.transactionName === "License Upgrade");

      var pendingCount = BookPermitBookings.filter(b => b.status === "Pending").length;
    var approvedCount = BookPermitBookings.filter(b => b.status === "Approved").length;

$('.pending').text(pendingCount);
$('.approved').text(approvedCount);

      // Destroy existing DataTable instance
      if ($.fn.DataTable.isDataTable('#BookingData')) {
        $('#BookingData').DataTable().destroy();
      }

      // Initialize DataTable with filtered data
      $('#BookingData').DataTable({
        data: BookPermitBookings,
        columns: [
          { data: 'bookingId' },
          { 
            data: null, 
            render: function(data, type, row) {
              return `${row.firstname} ${row.middlename} ${row.lastname}`;
            }
          },
          { data: 'gmail' },
          { data: 'age' },
          { data: 'bookingDate' },
          { data: 'prioritynumber' },
          { data: 'status' },
          {
            data: 'bookingId',
            render: function (data, type, row) {
              return btnClickdata(data);
            }
          },
        ]
      });
    }
  });
}


    @* function btnClickdata(bookingId) {
      return "<center><a class='btn btn-success bookUpdate' data-id=" + bookingId + "><i class='fa-solid fa-pen-to-square' style='color : #ffffff;'></i></a> <br><br>  <a class='btn btn-danger bookDelete' data-id=" + bookingId + "><i class='fa-solid fa-trash' style='color : #ffffff;'></i></a></center>"
    } *@

       function btnClickdata(bookingId) {
            return "<center><a style='color : #ffffff;' class='btn btn-primary BookInfo' data-id=" + bookingId + ">&emsp;View&emsp;</a>  <br> <br>  <a  style='color : #ffffff;'   class='btn btn-danger bookDecline' data-id=" + bookingId + "> Decline </a> </center>"
        }


  $("tbody").delegate(".BookInfo", "click", function (e) {
            var i = e.target.closest("a").getAttribute("data-id");
            console.log(i);

            if (i != null) {
                selectedBookId = i;
                selectedBook = BookingList.find(element => element.bookingId == i);
                $("#modalBookInfo").modal("toggle");
                const formattedDate = new Date(selectedBook.bookingDate).toLocaleDateString("en-US", { year: 'numeric', month: 'long', day: 'numeric' });

                $(".cardInfo .info-Appointmentdate").html('Appointment Date : ' + formattedDate);
               $(".cardInfo .info-Fullname").html('Fullname : ' + selectedBook.firstname + ' ' + selectedBook.middlename + ' ' + selectedBook.lastname);
                $(".cardInfo .info-Prioritynumber").html('Priority Number : ' + selectedBook.prioritynumber);
                $(".cardInfo .info-Age").html('Age : ' + selectedBook.age);
                $(".cardInfo .info-Status").html('Status : ' + selectedBook.status);
                $(".cardInfo .info-TransactionName").html('TransactionName : ' + selectedBook.transactionName);
                $(".cardInfo .info-EmailAdd").html('Email Address : ' + selectedBook.gmail);
               

            }
        });



        
        $("#updateBookacc").click(function () {
            alertSaveChanges();
        });

        function alertSaveChanges() {
            Swal.fire({
                title: 'Do you want to Approved this appointment?',
                confirmButtonText: 'Approve',
                showCancelButton: true,
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    updateBookHolder();
                }
            })
        }

    function updateBookHolder() {
    if (counter > 100) {
      Swal.fire('Limit reached', 'All P-001 to P-100 codes have been used.', 'info');
      return;
    }

    const formatted = `P-${String(counter).padStart(3, "0")}`;
    @* document.getElementById('output').textContent += formatted + '\n'; *@
    counter++;
    
    const Fullname = selectedBook.firstname + " " + selectedBook.middlename + " " +selectedBook.lastname;
    const formattedDate = new Date(selectedBook.bookingDate).toLocaleDateString("en-US", { year: 'numeric', month: 'long', day: 'numeric' });

    selectedBook = BookingList.find(element => element.bookingId == selectedBookId);

    selectedBook.prioritynumber = formatted;
    selectedBook.status = "Approved";

   
            emailjs.init("_m-XpoQadIZovT2TA"); // Account Public Key


            var params = {
              sendername: "Land Transportation Office - Medellin",
              to: selectedBook.gmail,
              subject: "Appointment Approved and Priority Number",
              user: Fullname,
              date: formattedDate,
              transaction: selectedBook.transactionName,
              message: selectedBook.prioritynumber,

            };

            var serviceID = "service_yanivv6"; // Email Service ID
            var templateID = "template_8vf42oi"; // Email Template ID

            emailjs.send(serviceID, templateID, params)
              .then(res => {
                alert("Email sent successfully!!")
              })
              .catch(

            );
    

    //AJAX UPDATE Booking
            $.ajax
                ({
                    url: "../api/adminapi/updateBooking",
                    type: "POST",
                    data:
                    {
                        updateBooking: selectedBook,
                    
                    },
                })
                .done(function () {
                    
                    $("#modalBookInfo").modal("toggle");
                    displaySPData();
                    displaySavedProgress();
                });

    }


      





   



    function empty() {
      Swal.fire({
        icon: 'error',
        title: 'Validation Error',
        text: 'Please fill in all required fields!',
        confirmButtonText: 'OK'

      });
    }




    function error() {
      Swal.fire({
        icon: 'error',
        title: 'Email Account not found',
        text: 'Email is invalid!',
        confirmButtonText: 'OK'
      });
    }

    function gmailvalidation() {
      Swal.fire({
        icon: 'error',
        title: 'Incorrect Password and Email',
        text: 'Email and Password is invalid!',
        confirmButtonText: 'OK'
      });
    }


    function displaySavedProgress() {
      Swal.fire({
        icon: 'success',
        title: 'Welcome',
        text: 'Successfully Login',
        showConfirmButton: false,
        timer: 3500
      })

    }




  });//end of docuent ready

</script>



